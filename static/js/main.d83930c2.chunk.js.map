{"version":3,"sources":["components/line/MainLineChart.js","components/bars/CrimeBarChart.js","components/bars/FocusCrimes.js","components/nycMap/NYCMap.js","components/news/News.js","components/news/NewsWindow.js","App.js","hooks/useFilters/useFilters.js","reportWebVitals.js","index.js"],"names":["MainLineChart","data","play","setPlay","filters","setNewsDate","reset","setReset","speed","useState","key","name","color","lines","setlines","domainFluid","moment","valueOf","domain","setDomain","useEffect","filtered_lines","prop","push","boro_names_acronyms","selected_colors","length","filterLines","filtersChanged","points","setPoints","setTimeout","p","next","filterNewsDate","date","tooltipFormater","time","format","fixedNewsFilter","setFixedNewsFilter","m","ResponsiveContainer","width","height","LineChart","margin","top","right","left","bottom","onClick","args","activeLabel","console","log","onMouseMove","isTooltipActive","onMouseLeave","Customized","component","row","getCurrentDateOfTimeLapse","currentDate","cases","fontSize","version","baseProfile","xmlns","x","y","textAnchor","fill","CartesianGrid","strokeDasharray","XAxis","dataKey","scale","type","tickFormatter","minTickGap","YAxis","yAxisId","orientation","Tooltip","labelFormatter","Legend","map","line","Line","strokeWidth","stroke","dot","Brush","CrimeBarChart","BarChart","Bar","FocusCrimes","Grid","container","justify","alignItems","align","item","xs","md","className","Typography","variant","focus_crimes","crime","category","NYCMap","setFilters","unselected_colors","Object","keys","reduce","acc","colors","setColors","crime_data","features","nyc_borough_geo","fillColor","properties","BoroName","unknownColor","label","valueFormat","projectionType","projectionScale","projectionTranslation","projectionRotation","enableGraticule","graticuleLineColor","borderWidth","borderColor","tooltip","e","style","feature","cur","selected","unselected","News","Paper","url","newWindow","window","open","opener","openInNewTab","web_url","direction","spacing","thumbnail_url","src","alt","getImage","pub_date","headline","snippet","NewsWindow","newsDate","dateNews","covidNews","covid","showCovidNews","news","crimeNews","showCrimeNews","App","setFiltersChanged","updateFilters","filter","prevState","props","useFilters","arrests_covid_data","arrest_covid_merged","theme","createMuiTheme","typography","fontFamily","join","barChartsRef","useRef","sliderSpeed","setSliderSpeed","ThemeProvider","target","rel","href","contianer","alignContent","id","gutterBottom","Slider","value","getAriaValueText","aria-labelledby","valueLabelDisplay","step","marks","min","max","onChange","event","newValue","IconButton","current","scrollIntoView","behavior","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d83930c2.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport moment from \"moment\";\r\nimport {\r\n\tLineChart,\r\n\tLine,\r\n\tXAxis,\r\n\tYAxis,\r\n\tCartesianGrid,\r\n\tTooltip,\r\n\tLegend,\r\n\tResponsiveContainer,\r\n\tBrush,\r\n\tCustomized\r\n} from \"recharts\";\r\nimport boro_names_acronyms from \"../../data/boro_name_acronym.json\";\r\nimport selected_colors from \"../../data/boroColors_selected.json\";\r\nexport default function MainLineChart({ data, play, setPlay, filters, setNewsDate, reset, setReset, speed }) {\r\n\tconst [lines, setlines] = useState([{ key: \"ARREST_COUNT_7DAY_AVG\", name: \"NYC\", color: \"#fcba03\" }])\r\n\tconst domainFixed = [\r\n\t\tmoment('2020-01-01').valueOf(),\r\n\t\tmoment('2020-12-31').valueOf()\r\n\t];\r\n\tconst domainFluid = [\"auto\", \"auto\"];\r\n\tconst [domain, setDomain] = useState(domainFluid)\r\n\r\n\tconst filterLines = (filters) => {\r\n\t\tconst filtered_lines = [];\r\n\r\n\t\tfor (const prop in filters) {\r\n\t\t\tif (filters[prop]) {\r\n\t\t\t\tfiltered_lines.push(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tkey: \"ARREST_COUNT_7DAY_AVG_\" + boro_names_acronyms[prop],\r\n\t\t\t\t\t\tname: prop,\r\n\t\t\t\t\t\tcolor: selected_colors[prop]\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (filtered_lines.length === 0) {\r\n\t\t\tfiltered_lines.push({ key: \"ARREST_COUNT_7DAY_AVG\", name: \"NYC\", color: \"#fcba03\" });\r\n\t\t}\r\n\t\tsetlines(filtered_lines);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tfilterLines(filters.filters)\r\n\r\n\t}, [filters.filters, filters.filtersChanged])\r\n\r\n\tconst [points, setPoints] = useState(data)\r\n\r\n\tuseEffect(() => {\r\n\t\tif (play) {\r\n\t\t\tif (points.length === data.length) {\r\n\t\t\t\tsetPlay(!play);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetPoints(p => {\r\n\t\t\t\t\tif (p.length === data.length) {\r\n\t\t\t\t\t\tsetPlay(!play);\r\n\t\t\t\t\t\treturn p;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst next = data[p.length];\r\n\t\t\t\t\tif(next)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfilterNewsDate(next.date);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn [\r\n\t\t\t\t\t\t...p,\r\n\t\t\t\t\t\tnext,\r\n\t\t\t\t\t]\r\n\t\t\t\t})\r\n\t\t\t}, speed * 1000)\r\n\t\t}\r\n\t}, [points, setPoints])\r\n\r\n\tuseEffect(() => {\r\n\t\tif(reset)\r\n\t\t{\r\n\t\t\tsetDomain(domainFluid);\r\n\t\t\tsetPoints(data);\r\n\t\t\tsetReset(false);\r\n\t\t\tsetPlay(false);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tif (play && points.length === data.length) {\r\n\t\t\t\t// setDomain(domainFixed);\r\n\t\t\t\tsetPoints([]);\r\n\t\t\t}\r\n\t\t\telse if(play)\r\n\t\t\t{\r\n\t\t\t\tsetPoints(p => {\r\n\t\t\t\t\tconst next = data[p.length];\r\n\t\t\t\t\tfilterNewsDate(next.date);\r\n\t\t\t\t\treturn [\r\n\t\t\t\t\t\t...p,\r\n\t\t\t\t\t\tnext,\r\n\t\t\t\t\t]\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}, [play, reset])\r\n\r\n\tconst currentDateLayer = ({ data, width, height }) => {\r\n\t\tconst getCurrentDateOfTimeLapse = (data) => {\r\n\t\t\tconst row = data[data.length - 1];\r\n\t\t\tif (row) {\r\n\t\t\t\treturn [tooltipFormater(row.date), row[\"COVID_COUNT_7DAY_AVG\"]];\r\n\t\t\t}\r\n\t\t\treturn ['', ''];\r\n\t\t}\r\n\t\tconst [currentDate, cases] = getCurrentDateOfTimeLapse(data)\r\n\t\tconst getAvgCasesString = () => {\r\n\t\t\tif (cases !== '' || cases === 0) {\r\n\t\t\t\treturn \"Covid Cases 7-Day AVG: \" + cases;\r\n\t\t\t}\r\n\t\t\treturn '';\r\n\t\t}\r\n\t\tconst getFontSize = () => {\r\n\t\t\tif (width > 700) {\r\n\t\t\t\treturn 40;\r\n\t\t\t}\r\n\t\t\telse if (width > 600) {\r\n\t\t\t\treturn 30;\r\n\t\t\t}\r\n\t\t\telse if(width > 500)\r\n\t\t\t{\r\n\t\t\t\treturn 25;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\treturn 20;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst fontSize = getFontSize();\r\n\t\treturn (\r\n\t\t\t<svg version=\"1.1\"\r\n\t\t\t\tbaseProfile=\"full\"\r\n\t\t\t\twidth={width} height={height}\r\n\t\t\t\txmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t<text x={width / 2 - fontSize} y={height / 2 - fontSize} fontSize={fontSize} textAnchor=\"middle\" fill=\"lightgray\">{currentDate}</text>\r\n\t\t\t\t<text x={width / 2 - fontSize} y={height / 2} fontSize={fontSize} textAnchor=\"middle\" fill=\"lightgray\">{getAvgCasesString()}</text>\r\n\t\t\t</svg>\r\n\t\t)\r\n\t}\r\n\r\n\tconst tooltipFormater = (time) => {\r\n\t\treturn moment(time).format(\"Do [of] MMMM, YYYY\");\r\n\t};\r\n\r\n\tconst formatDateTick = (time) => {\r\n\t\tconst m = moment(time);\r\n\t\t// if (m.month() === 0) {\r\n\t\t// \treturn m.format(\"MMM, YYYY\");\r\n\t\t// }\r\n\t\treturn m.format(\"Do MMM, YY\");\r\n\t};\r\n\r\n\tconst brushFormatDateTick = (args) => {\r\n\t\tconst time = data[args].date;\r\n\t\treturn moment(time).format(\"Do MMM, YY\");\r\n\t};\r\n\r\n\tconst [fixedNewsFilter, setFixedNewsFilter] = useState(null)\r\n\r\n\tconst onClick = (args) => {\r\n\t\tif(args)\r\n\t\t{\r\n\t\t\tif (args.activeLabel) {\r\n\t\t\t\tsetFixedNewsFilter(args.activeLabel);\r\n\t\t\t}\r\n\t\t}\r\n\t\tconsole.log(args)\r\n\t}\r\n\r\n\tconst filterNewsDate = (time) => {\r\n\t\tconst m = moment(time);\r\n\t\tsetNewsDate(m.format(\"YYYY-MM-DD\"));\r\n\t}\r\n\t\r\n\tconst onMove = (args) => {\r\n\t\tif (args.isTooltipActive) {\r\n\t\t\tfilterNewsDate(args.activeLabel);\r\n\t\t}\r\n\t} \r\n\t\r\n\tconst onLeave = (args) => {\r\n\t\tif(fixedNewsFilter)\r\n\t\t{\r\n\t\t\tfilterNewsDate(fixedNewsFilter);\r\n\t\t}\r\n\t} \r\n\r\n\treturn (\r\n\t\t<ResponsiveContainer width=\"100%\" height=\"100%\">\r\n\t\t\t<LineChart\r\n\t\t\t\twidth={550}\r\n\t\t\t\theight={300}\r\n\t\t\t\tdata={points}\r\n\t\t\t\tmargin={{\r\n\t\t\t\t\ttop: 10,\r\n\t\t\t\t\tright: 0,\r\n\t\t\t\t\tleft: 0,\r\n\t\t\t\t\tbottom: 0,\r\n\t\t\t\t}}\r\n\t\t\t\tonClick={onClick}\r\n\t\t\t\tonMouseMove={onMove}\r\n\t\t\t\tonMouseLeave={onLeave}\r\n\t\t\t>\r\n\t\t\t\t<Customized key=\"date_background\" component={currentDateLayer} />\r\n\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\r\n\t\t\t\t<XAxis\r\n\t\t\t\t\tdataKey=\"date\"\r\n\t\t\t\t\tscale=\"time\"\r\n\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\ttickFormatter={formatDateTick}\r\n\t\t\t\t\tdomain={domain}\r\n\t\t\t\t\tminTickGap={30}\r\n\t\t\t\t/>\r\n\t\t\t\t<YAxis yAxisId=\"left\" />\r\n\t\t\t\t<YAxis yAxisId=\"right\" orientation=\"right\" />\r\n\t\t\t\t<Tooltip labelFormatter={tooltipFormater} />\r\n\t\t\t\t<Legend />\r\n\t\t\t\t{\r\n\t\t\t\t\tlines.map((line) => {\r\n\t\t\t\t\t\treturn <Line\r\n\t\t\t\t\t\t\tkey={line.key}\r\n\t\t\t\t\t\t\tstrokeWidth=\"3px\"\r\n\t\t\t\t\t\t\tyAxisId=\"left\"\r\n\t\t\t\t\t\t\ttype=\"monotone\"\r\n\t\t\t\t\t\t\tname={line.name + \" Arrests Count 7-Day Average\"}\r\n\t\t\t\t\t\t\tdataKey={line.key}\r\n\t\t\t\t\t\t\tstroke={line.color}\r\n\t\t\t\t\t\t\tdot={false}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\t<Line\r\n\t\t\t\t\tkey=\"covid\"\r\n\t\t\t\t\tstrokeWidth=\"3px\"\r\n\t\t\t\t\tyAxisId=\"right\"\r\n\t\t\t\t\ttype=\"monotone\"\r\n\t\t\t\t\tname=\"Covid Confirmed Cases 7-Day AVG\"\r\n\t\t\t\t\tdataKey=\"COVID_COUNT_7DAY_AVG\"\r\n\t\t\t\t\tstroke=\"#fc0703\"\r\n\t\t\t\t\tdot={false}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Brush tickFormatter={brushFormatDateTick} />\r\n\t\t\t</LineChart>\r\n\t\t</ResponsiveContainer>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\r\n\r\n\r\nexport default function CrimeBarChart({ data }) {\r\n\r\n\r\n    return (\r\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <BarChart\r\n                width={200}\r\n                height={200}\r\n                data={data}\r\n                margin={{\r\n                    top: 5,\r\n                    right: 0,\r\n                    left: 0,\r\n                    bottom: 5,\r\n                }}\r\n            >\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"MONTH\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Bar dataKey=\"COUNT_2019\" fill=\"#8884d8\" />\r\n                <Bar dataKey=\"COUNT_2020\" fill=\"#82ca9d\" />\r\n            </BarChart>\r\n        </ResponsiveContainer>\r\n    );\r\n\r\n}\r\n","import React from \"react\";\r\nimport focus_crimes from \"../../data/crimeData/focus_crimes.json\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport CrimeBarChart from \"./CrimeBarChart\";\r\nimport \"./FocusCrimes.css\";\r\nexport default function FocusCrimes() {\r\n\r\n    return (\r\n        <Grid container justify=\"center\" alignItems=\"stretch\" align=\"center\">\r\n            <Grid item xs={12} md={12} className=\"focus_crimes_heading\">\r\n                <Typography variant=\"h4\">Most Effected Crime Categories</Typography>\r\n                <Typography variant=\"body1\">Below are the arrest categories that were most effected by the spread of covid-19.\r\n                 The bar charts compare monthly aggregated crime counts for year 2019 and 2020 for each category.</Typography>\r\n            </Grid>\r\n            {focus_crimes.map(crime =>\r\n                <Grid key={crime.category} item xs={12} md={3} className=\"focus_crime_bar_chart\">\r\n                    <Typography variant=\"subtitle2\">{crime.category}</Typography>\r\n                    <CrimeBarChart data={crime.data}></CrimeBarChart>\r\n                </Grid>\r\n            )}\r\n        </Grid>\r\n    )\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { ResponsiveGeoMap } from '@nivo/geo';\r\nimport { nyc_borough_geo } from \"../../data/nycGeo\";\r\nimport crime_data from \"../../data/crimeData/crime_counts.json\";\r\nimport selected_colors from \"../../data/boroColors_selected.json\";\r\nexport default function NYCMap({ data, setFilters }) {\r\n    const unselected_color = \"#eeeeee\";\r\n    const unselected_colors = Object.keys(selected_colors).reduce((acc, key) => { acc[key] =unselected_color; return acc; }, {})\r\n    const [colors, setColors] = useState({...unselected_colors})\r\n\r\n    const tooltipFormater = (e) => {\r\n        return <div style={{ \"backgroundColor\": \"white\", \"padding\": \"5px\" }}><b>{e.feature.properties.BoroName}</b></div>;\r\n    }\r\n\r\n    const colorFormater = (args) => {\r\n        return colors[args.properties.BoroName]\r\n    }\r\n\r\n    const mouseClick = (e) => {\r\n        const name = e.properties.BoroName;\r\n        const cur = colors[name];\r\n        const selected = selected_colors[name];\r\n        const unselected = unselected_colors[name];\r\n        let next = cur === selected ? unselected : selected;\r\n        setColors({...colors, [name]: next});\r\n        setFilters(name);\r\n    }\r\n\r\n    return (\r\n    <ResponsiveGeoMap\r\n        data={crime_data}\r\n        features={nyc_borough_geo.features}\r\n        margin={{ top: 0, right: 0, bottom: 0, left: 0 }}\r\n        height={150}\r\n        fillColor={colorFormater}\r\n        unknownColor=\"#666666\"\r\n        label=\"properties.BoroName\"\r\n        valueFormat=\".2s\"\r\n        projectionType=\"orthographic\"\r\n        projectionScale={20000}\r\n        projectionTranslation={[0.45, 0.5]}\r\n        projectionRotation={[74.05, -40.7, -360]}\r\n        enableGraticule={true}\r\n        graticuleLineColor=\"#dddddd\"\r\n        borderWidth={1}\r\n        borderColor=\"#152538\"\r\n        tooltip={tooltipFormater}\r\n        onClick={mouseClick}\r\n    />\r\n)}","import React from 'react'\r\nimport { Grid, Paper, Typography, IconButton } from \"@material-ui/core\";\r\nimport './News.css';\r\n\r\nexport default function News({data}) {\r\n    const provider = \"https://www.nytimes.com/\";\r\n    \r\n\r\n    const openInNewTab = (url) => {\r\n        const newWindow = window.open(url, '_blank', 'noopener,noreferrer')\r\n        if (newWindow) newWindow.opener = null\r\n    }\r\n\r\n    const getImage = () => {\r\n        if(data.thumbnail_url)\r\n        {\r\n            return <img className=\"news_thumbnail\" src={provider + data.thumbnail_url} alt=\"Logo\" />\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Paper className=\"news\" onClick={() => openInNewTab(data.web_url)}>\r\n            <Grid container justify=\"flex-start\" alignItems=\"flex-start\" align=\"left\" direction=\"row\" spacing={1}>\r\n                <Grid item>\r\n                    {getImage()}\r\n                    <Typography className=\"pub_date\">Publish on: {data.pub_date}</Typography>\r\n                    <Typography className=\"news_heading\">{data.headline}</Typography>\r\n                    {data.snippet}\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    )\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport { Grid, Paper, Typography, IconButton } from \"@material-ui/core\";\r\nimport news from '../../data/news/news-data.json';\r\nimport News from \"./News\";\r\nexport default function NewsWindow({ newsDate }) {\r\n\r\n    const showCovidNews = (data) => {\r\n        const dateNews = data[newsDate];\r\n        if (dateNews)\r\n        {\r\n            const covidNews = dateNews.covid;\r\n            if(covidNews)\r\n            {\r\n                return <><Grid item>\r\n                    <Typography variant=\"h6\">Covid-19</Typography>\r\n                </Grid>\r\n                    <News data={covidNews}></News></>;\r\n            }\r\n        }\r\n    }\r\n\r\n    const showCrimeNews = (data) => {\r\n        const dateNews = data[newsDate];\r\n        if (dateNews) {\r\n            const crimeNews = dateNews.crime;\r\n            if (crimeNews) {\r\n                return <><Grid item>\r\n                    <Typography variant=\"h6\">Crime</Typography>\r\n                </Grid>\r\n                    <News data={crimeNews}></News></>;\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Paper>\r\n            <Grid container justify=\"center\" alignItems=\"center\" align=\"center\" direction=\"column\">\r\n                <Grid item>\r\n                    <Typography variant=\"h5\">New York Times</Typography>\r\n                </Grid>\r\n                {showCovidNews(news)}\r\n                {showCrimeNews(news)}\r\n            </Grid>\r\n        </Paper>\r\n    )\r\n}\r\n","import React, { useState, useRef } from \"react\";\nimport useFilters from \"./hooks/useFilters/useFilters\";\n\nimport MainLineChart from \"./components/line/MainLineChart\";\nimport FocusCrimes from \"./components/bars/FocusCrimes\";\nimport NYCMap from \"./components/nycMap/NYCMap\";\n\nimport { Grid, Paper, Typography, IconButton } from \"@material-ui/core\";\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport ResetIcon from '@material-ui/icons/RotateLeftOutlined';\nimport PauseIcon from '@material-ui/icons/PauseCircleOutline';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport \"./App.css\";\n\nimport arrest_covid_merged from \"./data/arrest_covid_merged.json\";\nimport NewsWindow from \"./components/news/NewsWindow\";\nimport Slider from '@material-ui/core/Slider';\n\nfunction App() {\n\n  const [play, setPlay] = useState(false);\n  const [reset, setReset] = useState(false);\n  const [newsDate, setNewsDate] = useState(\"2020-12-28\")\n\n  const filters = useFilters();\n\n  const dec_31_2019 = 1577750400000;\n  const arrests_covid_data = arrest_covid_merged.filter(e => e.date > dec_31_2019);\n\n  const theme = createMuiTheme({\n    // palette: {\n    //   primary: {\n    //     main: '#ff4400',\n    //   },\n    //   secondary: {\n    //     light: '#0066ff',\n    //     main: '#0044ff',\n    //     contrastText: '#ffcc00',\n    //   },\n    //   contrastThreshold: 3,\n    //   tonalOffset: 0.2,\n    // },\n    typography: {\n      fontFamily: [\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto',\n        '\"Helvetica Neue\"',\n        'Arial',\n        'sans-serif',\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(','),\n    },\n  });\n  const barChartsRef = useRef()\n\n  const scrollDown = () => {\n    barChartsRef.current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }\n\n  const [sliderSpeed, setSliderSpeed] = useState(1.0)\n\n  function valuetext(value) {\n    return `${value} Seconds`;\n  }\n\n  const sliderValueChanged = (event, newValue) => {\n    setSliderSpeed(newValue);\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Grid container justify=\"center\" alignItems=\"flex-start\" align=\"center\" spacing={1}>\n\n        <Grid item container justify=\"center\" alignItems=\"stretch\" xs={12} md={12} spacing={2} >\n          <Grid item xs={12} md={8} className=\"main_text\">\n            <Typography variant=\"h4\">Crimes in New York City and Covid-19</Typography>\n            <Typography>\n              COVID-19 has had a big impact on the day-to-day life of a big part of the population worldwide.\n              Many social aspects have been affected due to various kinds of restrictions and lockdowns.\n              With the help of <a target='_blank' rel=\"noreferrer\" href=\"https://data.cityofnewyork.us/Public-Safety/NYPD-Arrests-Data-Historic-/8h9b-rp9u\">NYPD Arrest data</a>,\n               <a target='_blank' rel=\"noreferrer\" href=\"https://www1.nyc.gov/site/doh/covid/covid-19-data.page\"> New York City Covid data</a>,\n              and news articles from the <a target='_blank' rel=\"noreferrer\" href=\"https://www.nytimes.com/\">New York Times</a>,\n              this site aims to raise awareness about the effects of covid-19 on crimes in New York City.\n            </Typography>\n            <Typography>\n              <b>The line chart</b> shows the 7-day average for New York City arrest counts and confirmed covid cases.\n              <b> Hover on chart</b>, to see the news about covid-19 or crimes under the section New York Times. <b>The map of New York City</b> can be used to filter borough data.\n              Finally, <b>the play button</b> animates the line chart.\n            </Typography>\n          </Grid>\n          <Grid item xs={12} md={2}>\n            <Paper className=\"filter_options\">\n\n              <Grid contianer justify=\"center\" alignItems=\"center\" alignContent=\"stretch\" align=\"center\" direction=\"row\">\n\n                <Grid item xs={12} md={12} className=\"slider\">\n                  <Typography id=\"discrete-slider\" gutterBottom>\n                    Speed in Seconds\n                  </Typography>\n                  <Slider\n                    value={sliderSpeed}\n                    getAriaValueText={valuetext}\n                    aria-labelledby=\"discrete-slider\"\n                    valueLabelDisplay=\"auto\"\n                    step={0.25}\n                    marks={true}\n                    min={0.25}\n                    max={10}\n                    onChange={sliderValueChanged}\n                  />\n\n                <Grid item xs={12} md={12}>\n                  <IconButton className=\"play\" color=\"primary\" component=\"span\" onClick={() => setPlay(!play)}>\n                    {!play ? <PlayCircleOutlineIcon className=\"play_button\" /> : <PauseIcon className=\"play_button\" />}\n                  </IconButton>\n\n                  <IconButton className=\"play\" color=\"primary\" component=\"span\" onClick={() => setReset(!reset)}>\n                    <ResetIcon className=\"reset_button\" />\n                  </IconButton>\n                </Grid>\n                </Grid>\n\n              </Grid>\n            </Paper>\n          </Grid>\n          <Grid item xs={12} md={2} >\n            <Paper className=\"filter_options\">\n              <NYCMap data={[]} setFilters={filters.updateFilters} />\n            </Paper>\n          </Grid>\n        </Grid>\n\n        <Grid item container xs={12} md={12} justify=\"center\">\n          <Grid item xs={12} md={8} className=\"main_line_chart\" >\n            <MainLineChart data={arrests_covid_data} play={play} setPlay={setPlay} reset={reset} setReset={setReset} filters={filters} setNewsDate={setNewsDate} speed={sliderSpeed}></MainLineChart>\n          </Grid>\n          <Grid item xs={12} md={4} >\n            <NewsWindow newsDate={newsDate}></NewsWindow>\n          </Grid>\n        </Grid>\n\n        <Grid item xs={12} md={12}>\n          <IconButton color=\"primary\" component=\"span\" onClick={scrollDown}>\n            <KeyboardArrowDownIcon fontSize=\"large\" />\n          </IconButton>\n        </Grid>\n        <Grid item ref={barChartsRef} xs={12}>\n          <FocusCrimes />\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n  )\n}\n\nexport default App","import { useState } from \"react\"\r\n\r\nexport default function useFilters() {\r\n    const [filters, setFilters] = useState({});\r\n    const [filtersChanged, setFiltersChanged] = useState(false);\r\n\r\n    const updateFilters = filter => {\r\n        setFilters((prevState, props) => {\r\n            return { ...prevState, [filter]: !prevState[filter] };\r\n        })\r\n        setFiltersChanged(!filtersChanged)\r\n    }\r\n\r\n    return { filters, updateFilters, filtersChanged}\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}