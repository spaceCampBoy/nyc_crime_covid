{"version":3,"sources":["components/line/MainLineChart.js","components/bars/CrimeBarChart.js","components/bars/FocusCrimes.js","components/nycMap/NYCMap.js","App.js","hooks/useFilters/useFilters.js","reportWebVitals.js","index.js"],"names":["MainLineChart","data","play","setPlay","filters","useState","key","name","color","lines","setlines","domainFixed","moment","valueOf","domainFluid","domain","setDomain","useEffect","filtered_lines","prop","push","boro_names_acronyms","selected_colors","length","filterLines","filtersChanged","points","setPoints","setTimeout","p","next","tooltipFormater","time","format","ResponsiveContainer","width","height","LineChart","margin","top","right","left","bottom","Customized","component","row","date","getCurrentDateOfTimeLapse","currentDate","cases","fontSize","version","baseProfile","xmlns","x","y","textAnchor","fill","CartesianGrid","strokeDasharray","XAxis","dataKey","scale","type","tickFormatter","m","month","minTickGap","YAxis","yAxisId","orientation","Tooltip","labelFormatter","Legend","map","line","Line","strokeWidth","stroke","dot","Brush","args","CrimeBarChart","BarChart","Bar","FocusCrimes","Grid","container","justify","alignItems","align","item","xs","md","className","Typography","variant","focus_crimes","crime","category","NYCMap","setFilters","unselected_colors","Object","keys","reduce","acc","colors","setColors","crime_data","features","nyc_borough_geo","fillColor","properties","BoroName","unknownColor","label","valueFormat","projectionType","projectionScale","projectionTranslation","projectionRotation","enableGraticule","graticuleLineColor","borderWidth","borderColor","tooltip","e","style","feature","onClick","cur","selected","unselected","App","setFiltersChanged","updateFilters","filter","prevState","props","useFilters","arrests_covid_data","arrest_covid_merged","theme","createMuiTheme","palette","primary","main","secondary","light","contrastText","contrastThreshold","tonalOffset","typography","fontFamily","join","barChartsRef","useRef","ThemeProvider","spacing","direction","Paper","IconButton","current","scrollIntoView","behavior","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd426e35.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport moment from \"moment\";\r\nimport {\r\n\tLineChart,\r\n\tLine,\r\n\tXAxis,\r\n\tYAxis,\r\n\tCartesianGrid,\r\n\tTooltip,\r\n\tLegend,\r\n\tResponsiveContainer,\r\n\tBrush,\r\n\tCustomized\r\n} from \"recharts\";\r\nimport boro_names_acronyms from \"../../data/boro_name_acronym.json\";\r\nimport selected_colors from \"../../data/boroColors_selected.json\";\r\nexport default function MainLineChart({ data, play, setPlay, filters }) {\r\n\tconst [lines, setlines] = useState([{ key: \"ARREST_COUNT_7DAY_AVG\", name: \"NYC\", color: \"#fcba03\" }])\r\n\tconst domainFixed = [\r\n\t\tmoment('2019-01-01').valueOf(),\r\n\t\tmoment('2020-12-31').valueOf()\r\n\t];\r\n\tconst domainFluid = [\"auto\", \"auto\"];\r\n\tconst [domain, setDomain] = useState(domainFluid)\r\n\r\n\tconst filterLines = (filters) => {\r\n\t\tconst filtered_lines = [];\r\n\r\n\t\tfor (const prop in filters) {\r\n\t\t\tif (filters[prop]) {\r\n\t\t\t\tfiltered_lines.push(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tkey: \"ARREST_COUNT_7DAY_AVG_\" + boro_names_acronyms[prop],\r\n\t\t\t\t\t\tname: prop,\r\n\t\t\t\t\t\tcolor: selected_colors[prop]\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (filtered_lines.length === 0) {\r\n\t\t\tfiltered_lines.push({ key: \"ARREST_COUNT_7DAY_AVG\", name: \"NYC\", color: \"#fcba03\" });\r\n\t\t}\r\n\t\tsetlines(filtered_lines);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tfilterLines(filters.filters)\r\n\r\n\t}, [filters.filters, filters.filtersChanged])\r\n\r\n\tconst [points, setPoints] = useState(data)\r\n\r\n\tuseEffect(() => {\r\n\t\tif (play) {\r\n\t\t\tif (points.length === data.length) {\r\n\t\t\t\tsetPlay(!play);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetPoints(p => {\r\n\t\t\t\t\tif (p.length === data.length) {\r\n\t\t\t\t\t\tsetPlay(!play);\r\n\t\t\t\t\t\treturn p;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst next = data[p.length]\r\n\r\n\t\t\t\t\treturn [\r\n\t\t\t\t\t\t...p,\r\n\t\t\t\t\t\tnext,\r\n\t\t\t\t\t]\r\n\t\t\t\t})\r\n\t\t\t}, 50)\r\n\t\t}\r\n\t}, [points, setPoints])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (play) {\r\n\t\t\tsetDomain(domainFixed);\r\n\t\t\tsetPoints([]);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetDomain(domainFluid);\r\n\t\t\tsetPoints(data);\r\n\t\t}\r\n\t}, [play])\r\n\r\n\tconst currentDateLayer = ({ data, width, height }) => {\r\n\t\tconst getCurrentDateOfTimeLapse = (data) => {\r\n\t\t\tconst row = data[data.length - 1];\r\n\t\t\tif (row) {\r\n\t\t\t\treturn [tooltipFormater(row.date), row[\"COVID_COUNT_7DAY_AVG\"]];\r\n\t\t\t}\r\n\t\t\treturn ['', ''];\r\n\t\t}\r\n\t\tconst [currentDate, cases] = getCurrentDateOfTimeLapse(data)\r\n\t\tconst getAvgCasesString = () => {\r\n\t\t\tif (cases !== '' || cases === 0) {\r\n\t\t\t\treturn \"7-Day Avg: \" + cases;\r\n\t\t\t}\r\n\t\t\treturn '';\r\n\t\t}\r\n\t\tconst getFontSize = () => {\r\n\t\t\tif (width > 700) {\r\n\t\t\t\treturn 40;\r\n\t\t\t}\r\n\t\t\telse if (width > 600) {\r\n\t\t\t\treturn 30;\r\n\t\t\t}\r\n\t\t\telse if(width > 500)\r\n\t\t\t{\r\n\t\t\t\treturn 25;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\treturn 20;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst fontSize = getFontSize();\r\n\t\treturn (\r\n\t\t\t<svg version=\"1.1\"\r\n\t\t\t\tbaseProfile=\"full\"\r\n\t\t\t\twidth={width} height={height}\r\n\t\t\t\txmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t<text x={width / 2 - fontSize} y={height / 2 - fontSize} fontSize={fontSize} textAnchor=\"middle\" fill=\"lightgray\">{currentDate}</text>\r\n\t\t\t\t<text x={width / 2 - fontSize} y={height / 2} fontSize={fontSize} textAnchor=\"middle\" fill=\"lightgray\">{getAvgCasesString()}</text>\r\n\t\t\t</svg>\r\n\t\t)\r\n\t}\r\n\r\n\tconst tooltipFormater = (time) => {\r\n\t\treturn moment(time).format(\"Do [of] MMMM, YYYY\");\r\n\t};\r\n\r\n\tconst formatDateTick = (time) => {\r\n\t\tconst m = moment(time);\r\n\t\tif (m.month() === 0) {\r\n\t\t\treturn m.format(\"MMM, YYYY\");\r\n\t\t}\r\n\t\treturn m.format(\"MMM\");\r\n\t};\r\n\r\n\tconst brushFormatDateTick = (args) => {\r\n\t\tconst time = data[args].date;\r\n\t\treturn moment(time).format(\"Do MMM, YY\");\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ResponsiveContainer width=\"100%\" height=\"100%\">\r\n\t\t\t<LineChart\r\n\t\t\t\twidth={550}\r\n\t\t\t\theight={300}\r\n\t\t\t\tdata={points}\r\n\t\t\t\tmargin={{\r\n\t\t\t\t\ttop: 10,\r\n\t\t\t\t\tright: 0,\r\n\t\t\t\t\tleft: 0,\r\n\t\t\t\t\tbottom: 0,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Customized key=\"date_background\" component={currentDateLayer} />\r\n\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\r\n\t\t\t\t<XAxis\r\n\t\t\t\t\tdataKey=\"date\"\r\n\t\t\t\t\tscale=\"time\"\r\n\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\ttickFormatter={formatDateTick}\r\n\t\t\t\t\tdomain={domain}\r\n\t\t\t\t\tminTickGap={30}\r\n\t\t\t\t/>\r\n\t\t\t\t<YAxis yAxisId=\"left\" />\r\n\t\t\t\t<YAxis yAxisId=\"right\" orientation=\"right\" />\r\n\t\t\t\t<Tooltip labelFormatter={tooltipFormater} />\r\n\t\t\t\t<Legend />\r\n\t\t\t\t{\r\n\t\t\t\t\tlines.map((line) => {\r\n\t\t\t\t\t\treturn <Line\r\n\t\t\t\t\t\t\tkey={line.key}\r\n\t\t\t\t\t\t\tstrokeWidth=\"3px\"\r\n\t\t\t\t\t\t\tyAxisId=\"left\"\r\n\t\t\t\t\t\t\ttype=\"monotone\"\r\n\t\t\t\t\t\t\tname={line.name}\r\n\t\t\t\t\t\t\tdataKey={line.key}\r\n\t\t\t\t\t\t\tstroke={line.color}\r\n\t\t\t\t\t\t\tdot={false}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\t<Line\r\n\t\t\t\t\tkey=\"covid\"\r\n\t\t\t\t\tstrokeWidth=\"3px\"\r\n\t\t\t\t\tyAxisId=\"right\"\r\n\t\t\t\t\ttype=\"monotone\"\r\n\t\t\t\t\tname=\"Covid Cases 7Day AVG\"\r\n\t\t\t\t\tdataKey=\"COVID_COUNT_7DAY_AVG\"\r\n\t\t\t\t\tstroke=\"#fc0703\"\r\n\t\t\t\t\tdot={false}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Brush tickFormatter={brushFormatDateTick} />\r\n\t\t\t</LineChart>\r\n\t\t</ResponsiveContainer>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\r\n\r\n\r\nexport default function CrimeBarChart({ data }) {\r\n\r\n\r\n    return (\r\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <BarChart\r\n                width={200}\r\n                height={200}\r\n                data={data}\r\n                margin={{\r\n                    top: 5,\r\n                    right: 0,\r\n                    left: 0,\r\n                    bottom: 5,\r\n                }}\r\n            >\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"MONTH\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Bar dataKey=\"COUNT_2019\" fill=\"#8884d8\" />\r\n                <Bar dataKey=\"COUNT_2020\" fill=\"#82ca9d\" />\r\n            </BarChart>\r\n        </ResponsiveContainer>\r\n    );\r\n\r\n}\r\n","import React from \"react\";\r\nimport focus_crimes from \"../../data/crimeData/focus_crimes.json\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport CrimeBarChart from \"./CrimeBarChart\";\r\nimport \"./FocusCrimes.css\";\r\nexport default function FocusCrimes() {\r\n\r\n    return (\r\n        <Grid container justify=\"center\" alignItems=\"stretch\" align=\"center\">\r\n            <Grid item xs={12} md={12} className=\"focus_crimes_heading\">\r\n                <Typography variant=\"h4\">Most Effected Categories</Typography>\r\n            </Grid>\r\n            {focus_crimes.map(crime =>\r\n                <Grid key={crime.category} item xs={12} md={3} className=\"focus_crime_bar_chart\">\r\n                    <Typography variant=\"body1\">{crime.category}</Typography>\r\n                    <CrimeBarChart data={crime.data}></CrimeBarChart>\r\n                </Grid>\r\n            )}\r\n        </Grid>\r\n    )\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { ResponsiveGeoMap } from '@nivo/geo';\r\nimport { nyc_borough_geo } from \"../../data/nycGeo\";\r\nimport crime_data from \"../../data/crimeData/crime_counts.json\";\r\nimport selected_colors from \"../../data/boroColors_selected.json\";\r\nexport default function NYCMap({ data, setFilters }) {\r\n    const unselected_color = \"#eeeeee\";\r\n    const unselected_colors = Object.keys(selected_colors).reduce((acc, key) => { acc[key] =unselected_color; return acc; }, {})\r\n    const [colors, setColors] = useState({...unselected_colors})\r\n\r\n    const tooltipFormater = (e) => {\r\n        return <div style={{ \"backgroundColor\": \"white\", \"padding\": \"5px\" }}><b>{e.feature.properties.BoroName}</b></div>;\r\n    }\r\n\r\n    const colorFormater = (args) => {\r\n        return colors[args.properties.BoroName]\r\n    }\r\n\r\n    const mouseClick = (e) => {\r\n        const name = e.properties.BoroName;\r\n        const cur = colors[name];\r\n        const selected = selected_colors[name];\r\n        const unselected = unselected_colors[name];\r\n        let next = cur === selected ? unselected : selected;\r\n        setColors({...colors, [name]: next});\r\n        setFilters(name);\r\n    }\r\n\r\n    return (\r\n    <ResponsiveGeoMap\r\n        data={crime_data}\r\n        features={nyc_borough_geo.features}\r\n        margin={{ top: 0, right: 0, bottom: 0, left: 0 }}\r\n        height={250}\r\n        fillColor={colorFormater}\r\n        unknownColor=\"#666666\"\r\n        label=\"properties.BoroName\"\r\n        valueFormat=\".2s\"\r\n        projectionType=\"orthographic\"\r\n        projectionScale={25000}\r\n        projectionTranslation={[0.39, 0.5]}\r\n        projectionRotation={[74.05, -40.7, -360]}\r\n        enableGraticule={true}\r\n        graticuleLineColor=\"#dddddd\"\r\n        borderWidth={1}\r\n        borderColor=\"#152538\"\r\n        tooltip={tooltipFormater}\r\n        onClick={mouseClick}\r\n    />\r\n)}","import React, { useState, useRef } from \"react\";\nimport useFilters from \"./hooks/useFilters/useFilters\";\n\nimport MainLineChart from \"./components/line/MainLineChart\";\nimport FocusCrimes from \"./components/bars/FocusCrimes\";\nimport NYCMap from \"./components/nycMap/NYCMap\";\n\nimport { Grid, Paper, Typography, IconButton } from \"@material-ui/core\";\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport StopIcon from '@material-ui/icons/Stop';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport \"./App.css\";\n\nimport arrest_covid_merged from \"./data/arrest_covid_merged.json\";\n\nfunction App() {\n\n  const [play, setPlay] = useState(false);\n\n  const filters = useFilters();\n\n  const arrests_covid_data = arrest_covid_merged\n\n  const theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: '#ff4400',\n      },\n      secondary: {\n        light: '#0066ff',\n        main: '#0044ff',\n        contrastText: '#ffcc00',\n      },\n      contrastThreshold: 3,\n      tonalOffset: 0.2,\n    },\n    typography: {\n      fontFamily: [\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto',\n        '\"Helvetica Neue\"',\n        'Arial',\n        'sans-serif',\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(','),\n    },\n  });\n  const barChartsRef = useRef()\n\n  const scrollDown = () => {\n    barChartsRef.current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Grid container justify=\"center\" alignItems=\"flex-start\" align=\"center\">\n\n        <Grid item container justify=\"space-between\" alignItems=\"stretch\" xs={12} md={2} spacing={2} direction=\"column\">\n          <Grid item>\n            <Typography variant=\"h4\">NYC Crimes and Covid</Typography>\n          </Grid>\n          <Grid item xs={12} md={12} >\n            <Paper className=\"filter_options\">\n              <NYCMap data={[]} setFilters={filters.updateFilters} />\n            </Paper>\n          </Grid>\n          <Grid item xs={12} md={12}>\n            <Paper >\n              <IconButton color=\"primary\" component=\"span\" onClick={() => setPlay(!play)}>\n                {!play ? <PlayCircleOutlineIcon fontSize=\"large\" /> : <StopIcon fontSize=\"large\" />}\n              </IconButton>\n            </Paper>\n          </Grid>\n        </Grid>\n\n        <Grid item container xs={12} md={10} justify=\"center\">\n          <Grid item xs={12} md={12} className=\"main_line_chart\" >\n            <MainLineChart data={arrests_covid_data} play={play} setPlay={setPlay} filters={filters}></MainLineChart>\n          </Grid>\n        </Grid>\n\n        <Grid item xs={12} md={12}>\n          <IconButton color=\"primary\" component=\"span\" onClick={scrollDown}>\n            <KeyboardArrowDownIcon fontSize=\"large\" />\n          </IconButton>\n        </Grid>\n        <Grid item ref={barChartsRef} xs={12}>\n          <FocusCrimes />\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n  )\n}\n\nexport default App","import { useState } from \"react\"\r\n\r\nexport default function useFilters() {\r\n    const [filters, setFilters] = useState({});\r\n    const [filtersChanged, setFiltersChanged] = useState(false);\r\n\r\n    const updateFilters = filter => {\r\n        setFilters((prevState, props) => {\r\n            return { ...prevState, [filter]: !prevState[filter] };\r\n        })\r\n        setFiltersChanged(!filtersChanged)\r\n    }\r\n\r\n    return { filters, updateFilters, filtersChanged}\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}